/* ========================================================================
 * Copyright 2014 miso4204
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 miso4204

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.qualifier

*/

package co.edu.uniandes.csw.miso4204.wishlist.persistence;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import co.edu.uniandes.csw.miso4204.wishlist.logic.dto.WishListDTO;
import co.edu.uniandes.csw.miso4204.wishlist.logic.dto.WishListPageDTO;
import co.edu.uniandes.csw.miso4204.wishlist.persistence.converter.WishListConverter;
import co.edu.uniandes.csw.miso4204.wishlist.persistence.entity.WishListEntity;

public abstract class _WishListPersistence{

  	protected EntityManager entityManager;
        
	public WishListDTO createWishList(WishListDTO wishList) {
            System.out.println("createWl2");
            entityManager.getTransaction().begin();
            System.out.println("createWl3");
                WishListDTO persistedWishListDTO = null;// = existWishListBuyer(wishList.getBuyerId());
            System.out.println("createWl33");    
                List<WishListDTO> wishListDTO;
                System.out.println("createWl34");    
                Query q = entityManager.createQuery("select u from WishListEntity u where u.buyerId = '" + wishList.getBuyerId() + "'" );
                System.out.println("createWl35");    
                wishListDTO = WishListConverter.entity2PersistenceDTOList(q.getResultList());
                System.out.println("createWl36");
                if (wishListDTO != null){
                    System.out.println("createWl37");
                    if (wishListDTO.size() > 0){
                        System.out.println("createWl38");
                        persistedWishListDTO = wishListDTO.get(0);
                        System.out.println("createWl39");
                    }
                    else {
                        persistedWishListDTO = null;
                    }
                    System.out.println("createWl40");
                }                
                System.out.println("createWl41");
                
                System.out.println("createWl42");
                
                System.out.println("createWl4");
                if (persistedWishListDTO != null){
                    System.out.println("createWl5");
                    entityManager.getTransaction().commit();
                    System.out.println("createWl6");
                    return persistedWishListDTO;
                }
                else {
                    System.out.println("createWl7");
                    WishListEntity entity=WishListConverter.persistenceDTO2Entity(wishList);
                    System.out.println("createWl8");
                    entityManager.persist(entity);
                    System.out.println("createWl9");
                    entityManager.getTransaction().commit();
                    System.out.println("createWl0");
                    return WishListConverter.entity2PersistenceDTO(entity);   
                    
                }
	}
	
	@SuppressWarnings("unchecked")
	public List<WishListDTO> getWishLists() {
		entityManager.getTransaction().begin();
		Query q = entityManager.createQuery("select u from WishListEntity u");
		List<WishListDTO> result = WishListConverter.entity2PersistenceDTOList(q.getResultList());
		entityManager.getTransaction().commit();
		return result;
		
	}

	@SuppressWarnings("unchecked")
	public WishListPageDTO getWishLists(Integer page, Integer maxRecords) {
		entityManager.getTransaction().begin();
		Query count = entityManager.createQuery("select count(u) from WishListEntity u");
		Long regCount = 0L;
		regCount = Long.parseLong(count.getSingleResult().toString());
		Query q = entityManager.createQuery("select u from WishListEntity u");
		if (page != null && maxRecords != null) {
		    q.setFirstResult((page-1)*maxRecords);
		    q.setMaxResults(maxRecords);
		}
		WishListPageDTO response = new WishListPageDTO();
		response.setTotalRecords(regCount);
		response.setRecords(WishListConverter.entity2PersistenceDTOList(q.getResultList()));
		entityManager.getTransaction().commit();
		return response;
	}

	public WishListDTO getWishList(Long id) {
            System.out.println("enPersisdewih1");
		entityManager.getTransaction().begin();
                System.out.println("enPersisdewih2");
		WishListDTO result = WishListConverter.entity2PersistenceDTO(entityManager.find(WishListEntity.class, id));
                System.out.println("enPersisdewih3");
		entityManager.getTransaction().commit();
                System.out.println("enPersisdewih4");
		return result;
	}

	public void deleteWishList(Long id) {
		entityManager.getTransaction().begin();
		WishListEntity entity=entityManager.find(WishListEntity.class, id);
		entityManager.remove(entity);
		entityManager.getTransaction().commit();
	}
        
        public WishListDTO existWishListBuyer(Long wishBuyerId) {               
                List<WishListDTO> wishListDTO;
                Query q = entityManager.createQuery("select u from WishListEntity u where u.buyerId = '" + wishBuyerId + "'" );
                wishListDTO = WishListConverter.entity2PersistenceDTOList(q.getResultList());
                if (wishListDTO != null){
                    if (wishListDTO.size() > 0){
                        return wishListDTO.get(0);
                    }
                }                
                return null;
        }
        
        public Long getWishListIdBuyerId(Long wishBuyerId) {  
            entityManager.getTransaction().begin();
            System.out.println("wlidb1");
                List<WishListDTO> wishListDTO;
                System.out.println("wlidb2");
                Query q = entityManager.createQuery("select u from WishListEntity u where u.buyerId = '" + wishBuyerId + "'" );
                System.out.println("wlidb3");
                wishListDTO = WishListConverter.entity2PersistenceDTOList(q.getResultList());
                System.out.println("wlidb3");
                if (wishListDTO != null){
                    System.out.println("wlidb4");
                    if (wishListDTO.size() > 0){
                        System.out.println("wlidb5 " + wishListDTO.get(0).getId());
                        entityManager.getTransaction().commit();
                        return wishListDTO.get(0).getId();
                    }
                    System.out.println("wlidb7");
                }     
                entityManager.getTransaction().commit();
                return null;
        }
        
	public void updateWishList(WishListDTO detail) {
		entityManager.getTransaction().begin();
		WishListEntity entity=entityManager.merge(WishListConverter.persistenceDTO2Entity(detail));
		WishListConverter.entity2PersistenceDTO(entity);
		entityManager.getTransaction().commit();
	}

}